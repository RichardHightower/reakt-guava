{
  "name": "Reakt Guava Bridge",
  "tagline": "Bridge between Reakt and Guava Futures",
  "body": "## Reakt to Guava Bridge\r\n\r\n[Reakt-Guava Website](http://advantageous.github.io/reakt-guava/)\r\n\r\nGuava gets used by many libraries for its async support.\r\nMany NoSQL drivers use Guava, e.g., Cassandra. \r\n\r\n***Guava*** is JDK 1.6 backwards compatible. \r\n\r\n[Reakt](http://advantageous.github.io/reakt/) provides composable \r\npromises that support lambda expressions, and a fluent API.\r\n\r\nThis bridge allows you to use ***Reakt's*** promises, reactive streams\r\nand callbacks to have a more modern Java experience with libs like\r\n[Cassandra](http://www.datastax.com/dev/blog/java-driver-async-queries) \r\nand other libs that use [Guava](https://github.com/google/guava).\r\n\r\n\r\n\r\n#### Cassandra Reakt example\r\n\r\n```java\r\n\r\n    futureToPromise(session.executeAsync(insertInto(\"Todo\")\r\n            .value(\"id\", todo.getId())\r\n            .value(\"createTime\", todo.getCreateTime())\r\n            .value(\"name\", todo.getName())\r\n            .value(\"description\", todo.getDescription()))\r\n    ).catchError(error -> {\r\n        serviceMgmt.increment(\"add.todo.fail\");\r\n        serviceMgmt.increment(\"add.todo.fail.\" +\r\n                error.getClass().getName().toLowerCase());\r\n        recordCassandraError();\r\n        promise.reject(\"unable to add todo\", error);\r\n    }).then(resultSet -> {\r\n        if (resultSet.wasApplied()) {\r\n            promise.resolve(true);\r\n            serviceMgmt.increment(\"add.todo.success\");\r\n        } else {\r\n            promise.resolve(false);\r\n            serviceMgmt.increment(\"add.todo.fail.not.added\");\r\n        }\r\n    }).invokeWithReactor(reactor, Duration.ofSeconds(10)))\r\n     \r\n```\r\n\r\n## Getting Started\r\n#### maven\r\n```xml\r\n<dependency>\r\n    <groupId>io.advantageous.reakt</groupId>\r\n    <artifactId>reakt-guava</artifactId>\r\n    <version>2.1.0.RELEASE</version>\r\n</dependency>\r\n```\r\n\r\n#### gradle\r\n```java\r\ncompile 'io.advantageous.reakt:reakt-guava:2.1.0.RELEASE'\r\n```\r\n\r\nYou can also use replay promises, all promises, any promises, and other\r\nfeatures of Reakt to simplify async, reactive Java development.\r\n\r\nReakt gets used by [QBit](http://advantageous.github.io/qbit/), and Conekt.\r\n\r\n#### Related projects\r\n* [QBit Reactive Microservices](http://advantageous.github.io/qbit/)\r\n* [Reakt Reactive Java](http://advantageous.github.io/reakt)\r\n* [Reakt Guava Bridge](http://advantageous.github.io/reakt-guava/)\r\n* [QBit Extensions](https://github.com/advantageous/qbit-extensions)\r\n* [Elekt Consul](http://advantageous.github.io/elekt-consul/)\r\n* [Elekt](http://advantageous.github.io/elekt/)\r\n* [Reactive Microservices](http://www.mammatustech.com/reactive-microservices)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}